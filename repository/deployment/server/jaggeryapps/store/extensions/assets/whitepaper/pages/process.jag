<%
var caramel;

require('/modules/store.js').exec(function (ctx) {
    var asset,
            log = ctx.log,
            sso = ctx.sso,
            aid = ctx.params.asset,
            store = ctx.store,
            user = ctx.user,
            tenantId = ctx.tenantId,
            configs = ctx.configs,
            site = ctx.site,
            matcher = ctx.matcher,
            inDashboard = false,
            utility = require('/modules/util.js');

    var LdapConnector = Packages.org.wso2.carbon.ldap.user.LDAPConnector;
    var connector = new LdapConnector();
    caramel = require('caramel');
    log.info(ctx);
    log.info(user);

    if (!user) {
        response.sendError(401, 'Unauthorized');
        return;
    }
    
    var carbon = require('carbon');
    var usrconf = carbon.server.loadConfig('user-mgt.xml');
    var adminUser = usrconf.*::['Realm'].*::['Configuration'].*::['AdminUser'].*::['UserName'].text();
    var adminPassword = usrconf.*::['Realm'].*::['Configuration'].*::['AdminUser'].*::['Password'].text()
    var artifact = store.asset(type, aid);
    try {
        var ws = require("ws"); 
        var version = new ws.WSRequest(); 
        var options = new Array(); 
        options.useSOAP = 1.1; 
        options.action = "urn:subscribe";
        //var um = server.userManager(server.current(session).tenantId);
        //var receiver = [um.getClaim(artifact.attributes.overview_provider,"http://wso2.org/claims/emailaddress",null)];
        var to = "mailto:subscribe:" + [connector.getEmailForUid(user.username)];
        var path_components = artifact.path.split("/");
        var path = path_components[0];
        for(var i=1;i<path_components.length -1;i++){
            path = path + "/" + path_components[i];
        }
        log.info(path);
        var payload = "<ser:subscribe xmlns:ser=\"http://services.info.registry.carbon.wso2.org\"><ser:path>" + path+ "/#</ser:path><ser:endpoint>" + to + "</ser:endpoint><ser:eventName>LifeCycleStateChanged</ser:eventName><ser:sessionId>42eeef27-b422-459b-817e-534a71a4663a</ser:sessionId></ser:subscribe>"
        log.info(payload);
        var result;

    
        version.open(options,"https://localhost:9443/admin/services/InfoAdminService", false,adminUser.toString(),adminPassword.toString()); 
        version.send(payload); 
        result = version.responseE4X;
    } catch (e) {
        log.error(e.toString());

    }
    
    if (!(store.asset(type, aid))) {
        response.sendError(404, 'Not Found');
        return;
    }
    store.subscribe(type, aid);
    response.sendRedirect(request.getParameter('destination'));
}, request, response, session);
%>
